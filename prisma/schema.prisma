generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId       String

  @@index([userId])
}

model User {
  id             String    @id @default(uuid())
  name           String?
  email          String?   @unique
  emailVerified  DateTime?
  hashedPassword String?
  image          String?
  admin          Boolean?

  appointments Appointment[]
  accounts     Account[]
  sessions     Session[]
}

model Appointment {
  id        Int      @id @default(autoincrement())
  busy      Boolean
  createdAt DateTime @default(now())

  user   User?   @relation(fields: [userId], references: [id])
  userId String?
  day    Day?    @relation(fields: [dayId], references: [id])
  dayId  Int?

  @@index([userId])
  @@index([dayId])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model StartTime {
  id        Int      @id @default(autoincrement())
  time      String   @unique
  createdAt DateTime @default(now())

  Day   Day? @relation(fields: [dayId], references: [id])
  dayId Int?

  @@index([dayId])
}

model EndTime {
  id        Int      @id @default(autoincrement())
  time      String   @unique
  createdAt DateTime @default(now())

  Day   Day? @relation(fields: [dayId], references: [id])
  dayId Int?

  @@index([dayId])
}

model Day {
  id           Int           @id @default(autoincrement())
  weekday      String        @unique(sort: Asc)
  createdAt    DateTime      @default(now())
  startTimes   StartTime[]
  endTimes     EndTime[]
  appointments Appointment[]
}
